{"version":3,"file":"static/js/807.31073c4d.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADK,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAMdG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,iBACXM,EADW,oBACGP,EADH,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAYjBK,EAAS,mCAAG,WAAMD,GAAN,yFACAN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAMTM,EAAW,mCAAG,WAAMF,GAAN,yFACFN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,2BADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD,sICJxB,EA7BkB,SAAC,GAAe,IAE1BO,EAFaC,EAAY,EAAZA,MACTC,EAAuDD,EAAvDC,SAAUC,EAA6CF,EAA7CE,MAAOC,EAAsCH,EAAtCG,aAAcC,EAAwBJ,EAAxBI,OAAQC,EAAgBL,EAAhBK,aAO/C,OAJgBN,EADAC,EAAMM,YACA,yCAAqCN,EAAMM,aAExCC,GAGrB,4BACF,gBAAKC,IAAKT,EAAQU,IAAKP,KACvB,4BACE,8BACIA,EADJ,KACa,IAAIQ,KAAKP,GAAcQ,cADpC,QAGA,wCACeC,KAAKC,MAAqB,GAAfR,GAD1B,QAGA,sCACA,uBAAIJ,KACJ,oCACA,uBACGG,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAK/C,E,0BC6BD,EArDqB,WAAO,IAAD,IACjBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAU,oBAAGR,EAASS,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc3C,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEMnC,EAAAA,EAAAA,IAAkB6B,GAFxB,OAENO,EAFM,OAGZV,EAASU,GAHG,gDAKZR,EAAS,EAAD,IALI,yDAAH,qDAQjBO,GACH,GAAE,CAACN,KAGA,iCACI,iCACI,2BACK,KACD,SAAC,EAAAQ,KAAD,CAAMC,GAAIP,EAAV,mCAEHJ,IAAS,6CACTtB,IACG,iCACI,SAAC,EAAD,CAAWA,MAAOA,KAElB,4BACI,mDAGA,SAAC,EAAAkC,QAAD,CAASD,GAAI,OAAQN,MAAOT,EAASS,MAArC,mBAGA,SAAC,EAAAO,QAAD,CAASD,GAAI,UAAWN,MAAOT,EAASS,MAAxC,+BAOhB,SAAC,EAAAQ,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,QAKf,C","sources":["api/fetchApi.js","components/MovieCards/MovieCards.jsx","pages/MovieDetail.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '414e626a6dd93e46a20c42c05170abc8';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(\n    `/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};","import defImg from '../../img/notPictyre.jpg'\n\nconst MovieCard = ({ movie }) => {\n    const { overview, title, release_date, genres, vote_average} = movie;\n    let poster;\n                if (movie.poster_path) {\n                    poster = `https://image.tmdb.org/t/p/w400${movie.poster_path}`;                   \n                } else {\n                    poster = defImg;\n    }\n    return(\n        <div>\n      <img src={poster} alt={title} />\n      <div>\n        <h2>\n          \"{title}\"({new Date(release_date).getFullYear()})\n        </h2>\n        <p>\n          User Score: {Math.round(vote_average * 10)}%\n        </p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {genres.map(genre => genre.name).join(', ')}\n        </p>\n      </div>\n    </div>\n    )\n}\n\nexport default MovieCard;\n","import { fetchMovieDetails } from \"api/fetchApi\";\nimport MovieCard from \"components/MovieCards/MovieCards\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Link, NavLink, Outlet, useLocation, useParams } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const linkToBack = location.state?.from ?? '/';\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const res = await fetchMovieDetails(movieId);\n                setMovie(res);\n            } catch (error) {\n                setError(error)\n            }\n        };\n        fetchMovies();\n    }, [movieId]);\n\n    return (\n        <>\n            <>\n                <div>\n                    {' '}\n                    <Link to={linkToBack}>Back to all movies</Link>\n                </div>\n                {error && <div>Something wrong</div>}\n                {movie && (\n                    <>\n                        <MovieCard movie={movie} />\n\n                        <div>\n                            <h3>\n                                Additiona information\n                            </h3>\n                            <NavLink to={'cast'} state={location.state}>\n                                Cast\n                            </NavLink>\n                            <NavLink to={'reviews'} state={location.state}>\n                                Reviews\n                            </NavLink>\n                        </div>\n                    </>\n                )}\n            </>\n            <Suspense fallback={null}>\n                <Outlet />\n            </Suspense>\n        </>\n  \n    );\n}\n\nexport default MovieDetails;"],"names":["API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","id","fetchCast","fetchReview","poster","movie","overview","title","release_date","genres","vote_average","poster_path","defImg","src","alt","Date","getFullYear","Math","round","map","genre","name","join","location","useLocation","useState","setMovie","error","setError","movieId","useParams","linkToBack","state","from","useEffect","fetchMovies","res","Link","to","NavLink","Suspense","fallback"],"sourceRoot":""}