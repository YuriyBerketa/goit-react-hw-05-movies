{"version":3,"file":"static/js/802.9f63ebc5.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADK,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAMdG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,iBACXM,EADW,oBACGP,EADH,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAYjBK,EAAS,mCAAG,WAAMD,GAAN,yFACAN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAMTM,EAAW,mCAAG,WAAMF,GAAN,yFACFN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,2BADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD,8ECFxB,UA7BgB,WACZ,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMF,OAJIC,EAAAA,EAAAA,YAAU,YACZN,EAAAA,EAAAA,IAAYO,OAAON,IAAUO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAWI,EAA5B,GACnC,GAAE,CAACR,IAEAG,EAAU,GACL,uMAIP,yBACGA,EAAQM,KAAI,gBAAEZ,EAAF,EAAEA,GAAIa,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACX,4BACE,0BACE,mCADF,IACkBD,MAElB,0BACE,oCADF,IACmBC,MAEnB,oBAPQd,EADC,KAalB,C","sources":["api/fetchApi.js","components/Review/Review.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '414e626a6dd93e46a20c42c05170abc8';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(\n    `/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};","import { fetchReview } from \"api/fetchApi\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n      useEffect(() => {\n    fetchReview(Number(movieId)).then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  if (reviews < 1) {\n    return <p>Дуже сумно, але ще не має відгуків(</p>;\n  }\n\n  return (\n    <div>\n      {reviews.map(({id, author, content}) => (\n        <div key={id}>\n          <p>\n            <b>Author:</b> {author}\n          </p>\n          <p>\n            <b>Content:</b> {content}\n          </p>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Reviews;"],"names":["API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","id","fetchCast","fetchReview","movieId","useParams","useState","reviews","setReviews","useEffect","Number","then","results","map","author","content"],"sourceRoot":""}