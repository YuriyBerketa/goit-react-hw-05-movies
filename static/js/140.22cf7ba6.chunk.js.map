{"version":3,"file":"static/js/140.22cf7ba6.chunk.js","mappings":"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","sources":["api/fetchApi.js","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/MovieCards/MovieCards.styled.jsx","components/MovieCards/MovieCards.jsx","pages/MovieDetail.jsx","pages/Page.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '414e626a6dd93e46a20c42c05170abc8';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(\n    `/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};","import styled from '@emotion/styled';\n\n\n\nexport const ContainerDiv = styled('div')`\nmargin-left: auto; \n  margin-right: auto; \n  min-width: 320px; \n  padding-left: 20px; \n  padding-right: 20px; \n  padding-top: 20px;\n`;","import { ContainerDiv } from \"./Container.styled\"\n\nconst Container = ({ children }) => {\n    return <ContainerDiv>{ children}</ContainerDiv>\n}\n\nexport default Container;","import styled from '@emotion/styled';\n\nexport const MovieDetailsCard = styled('div')`\n  display: flex;\n  padding: 20px;\n  gap: 50px;\n  justify-content: center;\n  background-color: black;\n`;\nexport const MovieDetailsImg = styled('img')`\n  display: block;\n`;\nexport const MovieDetailsAbout = styled('div')`\n  padding: 20px;\n  border: 2px solid black;\n  width: 600px;\n  background-color: white;\n`;\nexport const MovieDetailsTitle = styled('h2')`\n  text-align: center;\n  font-size: 35px;\n`;\nexport const MovieDetailsScore = styled('p')`\n  font-size: 25px;\n`;\nexport const MovieDetailsOverview = styled('h3')`\n  font-size: 25px;\n`;\nexport const MovieDetailsOverviewText = styled('p')`\n  font-size: 20px;\n`;\nexport const MovieDetailsGenres = styled('h3')`\n  font-size: 25px;\n`;\nexport const MovieDetailsGenresText = styled('p')`\n  font-size: 25px;\n`;","import defImg from '../../img/notPictyre.jpg'\nimport {\n  MovieDetailsImg,\n  MovieDetailsAbout,\n  MovieDetailsTitle,\n  MovieDetailsScore,\n  MovieDetailsOverview,\n  MovieDetailsOverviewText,\n  MovieDetailsGenres,\n  MovieDetailsGenresText,\n  MovieDetailsCard,\n} from './MovieCards.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n    const { overview, title, release_date, genres, vote_average} = movie;\n    let poster;\n                if (movie.poster_path) {\n                    poster = `https://image.tmdb.org/t/p/w400${movie.poster_path}`;                   \n                } else {\n                    poster = defImg;\n    }\n    return(\n        <MovieDetailsCard>\n      <MovieDetailsImg src={poster} alt={title} />\n      <MovieDetailsAbout>\n        <MovieDetailsTitle>\n          \"{title}\"({new Date(release_date).getFullYear()})\n        </MovieDetailsTitle>\n        <MovieDetailsScore>\n          User Score: {Math.round(vote_average * 10)}%\n        </MovieDetailsScore>\n        <MovieDetailsOverview>Overview</MovieDetailsOverview>\n        <MovieDetailsOverviewText>{overview}</MovieDetailsOverviewText>\n        <MovieDetailsGenres>Genres</MovieDetailsGenres>\n        <MovieDetailsGenresText>\n          {genres.map(genre => genre.name).join(', ')}\n        </MovieDetailsGenresText>\n      </MovieDetailsAbout>\n    </MovieDetailsCard>\n    )\n}\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import { fetchMovieDetails } from \"api/fetchApi\";\nimport MovieCard from \"components/MovieCards/MovieCards\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport {\n  MovieDetailsAdditional,\n  MovieDetailsAdditionalTitle,\n  NavItem,\n  LinkButton,\n  LinkBox,\n} from '../pages/Page.styled';\nimport Container from \"components/Container/Container\";\n\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const linkToBack = location.state?.from ?? '/';\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const res = await fetchMovieDetails(movieId);\n                setMovie(res);\n            } catch (error) {\n                setError(error)\n            }\n        };\n        fetchMovies();\n    }, [movieId]);\n\n    return (\n        <>\n            <Container>\n            <>\n                <LinkBox>\n                    {' '}\n                    <LinkButton to={linkToBack}>Back to all movies</LinkButton>\n                </LinkBox>\n                {error && <div>Something wrong</div>}\n                {movie && (\n                    <>\n                        <MovieCard movie={movie} />\n\n                        <MovieDetailsAdditional>\n                            <MovieDetailsAdditionalTitle>\n                                Additiona information\n                            </MovieDetailsAdditionalTitle>\n                            <NavItem to={'cast'} state={location.state}>\n                                Cast\n                            </NavItem>\n                            <NavItem to={'reviews'} state={location.state}>\n                                Reviews\n                            </NavItem>\n                        </MovieDetailsAdditional>\n                    </>\n                )}\n                </>\n                </Container>\n            <Suspense fallback={null}>\n                <Outlet />\n            </Suspense>\n        </>\n  \n    );\n}\n\nexport default MovieDetails;","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const LinkItem = styled(Link)`\n  width: 400px;\n  background-color: black;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  text-decoration: none;\n  margin-bottom: 40px;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n  &:hover {\n    scale: calc(1.03);\n    box-shadow: 0px 0px 20px 8px gray;\n  }\n  &:nth-last-of-type(-n + 4) {\n    margin-bottom: 0;\n  }\n  //  &:nth-last-child(-n + 4) {\n  //   margin-bottom: 0;\n  // }\n  \n`;\nexport const MoviesList = styled('div')`\n  // padding: 50px;\n  gap: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\nexport const MovieTitle = styled('h2')`\n  text-align: center;\n  font-size: 25px;\n  color: white;\n`;\nexport const LinkButton = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 5px;\n  font-size: 20px;\n  font-weight: 700;\n  color: white;\n  border: 2px solid black;\n  background-color: black;\n  transition: background-color 250ms linear, color 250ms linear;\n  &:hover,\n  :focus {\n    background-color: white;\n    color: black;\n  }\n`;\n\n// Movies Styles\nexport const MoviesSearchButton = styled('button')`\n  font-size: 20px;\n  background-color: black;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  border: 2px solid black;\n  transition: background-color 250ms linear, color 250ms linear;\n  &:hover,\n  focus {\n    color: black;\n    background-color: white;\n  }\n`;\nexport const MoviesForm = styled('form')`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n`;\nexport const MoviesInput = styled('input')`\n  padding: 10px;\n  font-size: 20px;\n  outline: none;\n  border: 2px solid black;\n  border-radius: 5px;\n`;\n\n// HomeStyles\nexport const TrendingTitle = styled('h1')`\n  text-align: center;\n  font-weight: 900;\n  font-size: 40px;\n`;\n// MovieDetails\nexport const MovieDetailsAdditional = styled('div')`\n  padding: 50px;\n`;\nexport const MovieDetailsAdditionalTitle = styled('h3')`\n  margin-top: 0;\n  font-size: 25px;\n`;\nexport const NavItem = styled(NavLink)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 25px;\n  color: black;\n  border-radius: 5px;\n  border: 2px solid black;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:focus,\n  :hover {\n    color: white;\n    background-color: black;\n  }\n  &.active {\n    color: white;\n    background-color: black;\n  }\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const LinkBox = styled('div')`\n  padding: 20px;\n`;\n// NotFound Styles\n\nexport const NotFoundBlock = styled('div')`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const NotFoundText = styled('p')`\n  font-size: 40px;\n`;\nexport const NotFoundLink = styled(Link)``;"],"names":["API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","id","fetchCast","fetchReview","ContainerDiv","styled","children","MovieDetailsCard","MovieDetailsImg","MovieDetailsAbout","MovieDetailsTitle","MovieDetailsScore","MovieDetailsOverview","MovieDetailsOverviewText","MovieDetailsGenres","MovieDetailsGenresText","poster","movie","overview","title","release_date","genres","vote_average","poster_path","defImg","src","alt","Date","getFullYear","Math","round","map","genre","name","join","location","useLocation","useState","setMovie","error","setError","movieId","useParams","linkToBack","state","from","useEffect","fetchMovies","res","Container","to","Suspense","fallback","LinkItem","Link","MoviesList","MovieTitle","LinkButton","MoviesSearchButton","MoviesForm","MoviesInput","TrendingTitle","MovieDetailsAdditional","MovieDetailsAdditionalTitle","NavItem","NavLink","LinkBox","NotFoundBlock","NotFoundText","NotFoundLink"],"sourceRoot":""}