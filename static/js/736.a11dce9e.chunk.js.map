{"version":3,"file":"static/js/736.a11dce9e.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADK,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAMdG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,iBACXM,EADW,oBACGP,EADH,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAYjBK,EAAS,mCAAG,WAAMD,GAAN,yFACAN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAMTM,EAAW,mCAAG,WAAMF,GAAN,yFACFN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,2BADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD,qICjCXO,GAAaC,EAAAA,EAAAA,GAAO,KAAPA,CAAH,oDAGVC,GAAaD,EAAAA,EAAAA,GAAO,KAAPA,CAAH,wGAMVE,GAAaF,EAAAA,EAAAA,GAAO,IAAPA,CAAH,gE,IAKIA,EAAAA,EAAAA,GAAO,IAAPA,CAAH,mF,QCmCxB,EA9Ca,WACb,IAiBQG,EAjBR,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACYC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BH,EAAAA,EAAAA,YAA5B,eAAOK,EAAP,KAAeC,EAAf,KAWA,IATAC,EAAAA,EAAAA,YAAU,WACRL,GAAW,IAETT,EAAAA,EAAAA,GAAUe,OAAOL,IACZM,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQZ,GAAW,GAC3B,GAAE,CAACC,KAECE,EACD,OAAO,KAKX,IAAQU,EAASV,EAATU,KAEV,OACE,UAAClB,EAAD,WACGI,IACC,yGAEDc,EAAKC,KAAI,SAAAC,GAOR,OALIlB,EADAkB,EAAMC,aACA,0CAAsCD,EAAMC,cAG9C,6HAGN,UAACvB,EAAD,YACE,gBAAKwB,IAAKpB,EAAQqB,MAAM,MAAMC,OAAO,MAAMC,IAAKL,EAAMM,QACtD,SAACzB,EAAD,UAAamB,EAAMM,SAFJN,EAAMzB,GAK1B,MAIN,C","sources":["api/fetchApi.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '414e626a6dd93e46a20c42c05170abc8';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(\n    `/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};","import styled from '@emotion/styled';\n\nexport const ActorsCard = styled('li')`\n  background-color: black;\n`;\nexport const ActorsList = styled('ul')`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n`;\nexport const ActorsName = styled('p')`\n  color: white;\n  text-align: center;\n`;\n\nexport const ActorsError = styled('p')`\n  padding: px;\n  text-align: center;\n  font-size: 30px;\n`;","import { fetchCast } from \"api/fetchApi\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ActorsCard, ActorsList, ActorsName } from './Cast.styled';\n\nconst Cast = () => {\nconst [loading, setLoading] = useState(false);\n    const { movieId } = useParams();\n    const [actors, setActors] = useState();\n\n    useEffect(() => {\n      setLoading(true);\n      \n        fetchCast(Number(movieId))\n            .then(setActors)\n            .catch(error => console.log(error))\n            .finally(setLoading(false));\n    }, [movieId]);\n\n    if (!actors) {\n        return null;\n    }\n\n    let poster;\n\n    const { cast } = actors;\n\n  return (\n    <ActorsList>\n      {loading && (\n        <div>Завантажуємо...</div>\n      )}\n      {cast.map(actor => {\n        if (actor.profile_path) {\n            poster = `https://image.tmdb.org/t/p/w200/${actor.profile_path}`;\n            \n        } else {\n          poster = `https://st.depositphotos.com/2101611/4338/v/600/depositphotos_43381243-stock-illustration-male-avatar-profile-picture.jpg`;\n        }\n        return (\n          <ActorsCard key={actor.id}>\n            <img src={poster} width=\"200\" height=\"300\" alt={actor.name} />\n            <ActorsName>{actor.name}</ActorsName>\n          </ActorsCard>\n        );\n      })}\n    </ActorsList>\n\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","id","fetchCast","fetchReview","ActorsCard","styled","ActorsList","ActorsName","poster","useState","loading","setLoading","movieId","useParams","actors","setActors","useEffect","Number","then","catch","error","console","log","finally","cast","map","actor","profile_path","src","width","height","alt","name"],"sourceRoot":""}