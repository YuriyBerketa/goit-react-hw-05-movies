{"version":3,"file":"static/js/134.4ce17398.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADK,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAMdG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,iBACXM,EADW,oBACGP,EADH,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAYjBK,EAAS,mCAAG,WAAMD,GAAN,yFACAN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAMTM,EAAW,mCAAG,WAAMF,GAAN,yFACFN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,2BADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD,qEC/BXO,GAAeC,E,OAAAA,GAAO,MAAPA,CAAH,kK,SCEzB,EAJkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,SAACF,EAAD,UAAgBE,GAC1B,C,qJCoFD,UAzEe,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KACMC,EAAW,UAAGJ,EAAaK,IAAI,iBAApB,QAAiC,GAC5CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAEuBrB,EAAAA,EAAAA,IAAeiB,GAFtC,OAEUlB,EAFV,OAGIY,GAAU,OAAIZ,EAAKuB,UAHvB,gDAKIC,QAAQC,IAAR,MALJ,0DALc,sBACTP,GADS,mCAadQ,EACD,GAAE,CAACR,IAmBJ,OACE,+BACE,UAAC,IAAD,YACA,UAAC,KAAD,CAAYS,SApBC,SAAAC,GACf,IAAKZ,EACH,OAAO,KAETY,EAAEC,iBACFd,EAA0B,KAAVC,EAAe,CAAEc,OAAQd,GAAU,CAAC,GACpDC,EAAS,GACV,EAaG,WACE,SAAC,KAAD,CACEc,KAAK,OACLC,MAAOhB,EACPiB,KAAK,QACLC,SAAU,SAAAN,GAAC,OAhBG,SAAAI,GAGpB,GAFAf,EAASe,IAEJrB,EACH,OAAO,IAEV,CAUsBwB,CAAcP,EAAEQ,OAAOJ,MAAMK,cAAjC,KAEb,SAAC,KAAD,CAAoBN,KAAK,SAAzB,wBAEF,SAAC,KAAD,UACCpB,EAAO2B,KAAI,YAAiC,IACvCC,EADSC,EAA6B,EAA7BA,YAAapC,EAAgB,EAAhBA,GAAIqC,EAAY,EAAZA,MAO9B,OAJEF,EADEC,EACI,yCAAqCA,GAElCE,GAGT,UAAC,KAAD,CAAmBC,GAAE,UAAKvC,GAAMwC,MAAO,CAAEC,KAAMzB,GAA/C,WACE,gBAAK0B,IAAKP,EAAQQ,MAAM,MAAMC,IAAKP,KACnC,SAAC,KAAD,UAAaA,MAFArC,EAKlB,UAKN,C,kcCnFY6C,GAAWzC,EAAAA,EAAAA,GAAO0C,EAAAA,GAAP1C,CAAH,ydAqBR2C,GAAa3C,EAAAA,EAAAA,GAAO,MAAPA,CAAH,oIAOV4C,GAAa5C,EAAAA,EAAAA,GAAO,KAAPA,CAAH,oFAKV6C,GAAa7C,EAAAA,EAAAA,GAAO0C,EAAAA,GAAP1C,CAAH,uXAmBV8C,GAAqB9C,EAAAA,EAAAA,GAAO,SAAPA,CAAH,gUAelB+C,GAAa/C,EAAAA,EAAAA,GAAO,OAAPA,CAAH,0EAKVgD,GAAchD,EAAAA,EAAAA,GAAO,QAAPA,CAAH,mIASXiD,GAAgBjD,EAAAA,EAAAA,GAAO,KAAPA,CAAH,wFAMbkD,GAAyBlD,EAAAA,EAAAA,GAAO,MAAPA,CAAH,0CAGtBmD,GAA8BnD,EAAAA,EAAAA,GAAO,KAAPA,CAAH,8DAI3BoD,GAAUpD,EAAAA,EAAAA,GAAOqD,EAAAA,GAAPrD,CAAH,gcAuBPsD,GAAUtD,EAAAA,EAAAA,GAAO,MAAPA,CAAH,0CAKPuD,GAAgBvD,EAAAA,EAAAA,GAAO,MAAPA,CAAH,6FAMbwD,GAAexD,EAAAA,EAAAA,GAAO,IAAPA,CAAH,4CAGZyD,GAAezD,EAAAA,EAAAA,GAAO0C,EAAAA,GAAP1C,CAAH,qB","sources":["api/fetchApi.js","components/Container/Container.styled.jsx","components/Container/Container.jsx","pages/Movies.jsx","pages/Page.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '414e626a6dd93e46a20c42c05170abc8';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(\n    `/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};","import styled from '@emotion/styled';\n\n\n\nexport const ContainerDiv = styled('div')`\nmargin-left: auto; \n  margin-right: auto; \n  min-width: 320px; \n  padding-left: 20px; \n  padding-right: 20px; \n  padding-top: 20px;\n`;","import { ContainerDiv } from \"./Container.styled\"\n\nconst Container = ({ children }) => {\n    return <ContainerDiv>{ children}</ContainerDiv>\n}\n\nexport default Container;","import { fetchSearchApi } from 'api/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport defImg from '../img/notPictyre.jpg';\nimport {\n  MoviesForm,\n  MoviesInput,\n  MoviesList,\n  MoviesSearchButton,\n  MovieTitle,\n  LinkItem,\n} from '../pages/Page.styled';\nimport Container from \"components/Container/Container\";\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setsearchParams] = useSearchParams();\n  const [input, setInput] = useState('');\n  const inputParams = searchParams.get('filter') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!inputParams) {\n      return;\n    }\n\n    async function fetch() {\n      try {\n        const data = await fetchSearchApi(inputParams);\n        setMovies([...data.results]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [inputParams]);\n\n  const onSubmit = e => {\n    if (!input) {\n      return null;\n    }\n    e.preventDefault();\n    setsearchParams(input !== '' ? { filter: input } : {});\n    setInput('');\n  };\n\n  const onChangeInput = value => {\n    setInput(value);\n\n    if (!movies) {\n      return null;\n    }\n  };\n\n  return (\n    <>\n      <Container>\n      <MoviesForm onSubmit={onSubmit}>\n        <MoviesInput\n          tupe=\"text\"\n          value={input}\n          name=\"input\"\n          onChange={e => onChangeInput(e.target.value.toLowerCase())}\n        />\n        <MoviesSearchButton tupe=\"submit\">Search</MoviesSearchButton>\n      </MoviesForm>\n      <MoviesList>\n      {movies.map(({ poster_path, id, title }) => {\n        let poster;\n        if (poster_path) {\n          poster = `https://image.tmdb.org/t/p/w400${poster_path}`;\n        } else {\n          poster = defImg;\n        }\n        return (\n          <LinkItem key={id} to={`${id}`} state={{ from: location }}>\n            <img src={poster} width=\"400\" alt={title} />\n            <MovieTitle>{title}</MovieTitle>\n          </LinkItem>\n        );\n      })}\n        </MoviesList>\n        </Container>\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const LinkItem = styled(Link)`\n  width: 400px;\n  background-color: black;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  text-decoration: none;\n  margin-bottom: 40px;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n  &:hover {\n    scale: calc(1.03);\n    box-shadow: 0px 0px 20px 8px gray;\n  }\n  &:nth-last-of-type(-n + 4) {\n    margin-bottom: 0;\n  }\n  //  &:nth-last-child(-n + 4) {\n  //   margin-bottom: 0;\n  // }\n  \n`;\nexport const MoviesList = styled('div')`\n  // padding: 50px;\n  gap: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\nexport const MovieTitle = styled('h2')`\n  text-align: center;\n  font-size: 25px;\n  color: white;\n`;\nexport const LinkButton = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 5px;\n  font-size: 20px;\n  font-weight: 700;\n  color: white;\n  border: 2px solid black;\n  background-color: black;\n  transition: background-color 250ms linear, color 250ms linear;\n  &:hover,\n  :focus {\n    background-color: white;\n    color: black;\n  }\n`;\n\n// Movies Styles\nexport const MoviesSearchButton = styled('button')`\n  font-size: 20px;\n  background-color: black;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  border: 2px solid black;\n  transition: background-color 250ms linear, color 250ms linear;\n  &:hover,\n  focus {\n    color: black;\n    background-color: white;\n  }\n`;\nexport const MoviesForm = styled('form')`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n`;\nexport const MoviesInput = styled('input')`\n  padding: 10px;\n  font-size: 20px;\n  outline: none;\n  border: 2px solid black;\n  border-radius: 5px;\n`;\n\n// HomeStyles\nexport const TrendingTitle = styled('h1')`\n  text-align: center;\n  font-weight: 900;\n  font-size: 40px;\n`;\n// MovieDetails\nexport const MovieDetailsAdditional = styled('div')`\n  padding: 50px;\n`;\nexport const MovieDetailsAdditionalTitle = styled('h3')`\n  margin-top: 0;\n  font-size: 25px;\n`;\nexport const NavItem = styled(NavLink)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 25px;\n  color: black;\n  border-radius: 5px;\n  border: 2px solid black;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:focus,\n  :hover {\n    color: white;\n    background-color: black;\n  }\n  &.active {\n    color: white;\n    background-color: black;\n  }\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const LinkBox = styled('div')`\n  padding: 20px;\n`;\n// NotFound Styles\n\nexport const NotFoundBlock = styled('div')`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const NotFoundText = styled('p')`\n  font-size: 40px;\n`;\nexport const NotFoundLink = styled(Link)``;"],"names":["API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","id","fetchCast","fetchReview","ContainerDiv","styled","children","useState","movies","setMovies","useSearchParams","searchParams","setsearchParams","input","setInput","inputParams","get","location","useLocation","useEffect","results","console","log","fetch","onSubmit","e","preventDefault","filter","tupe","value","name","onChange","onChangeInput","target","toLowerCase","map","poster","poster_path","title","defImg","to","state","from","src","width","alt","LinkItem","Link","MoviesList","MovieTitle","LinkButton","MoviesSearchButton","MoviesForm","MoviesInput","TrendingTitle","MovieDetailsAdditional","MovieDetailsAdditionalTitle","NavItem","NavLink","LinkBox","NotFoundBlock","NotFoundText","NotFoundLink"],"sourceRoot":""}